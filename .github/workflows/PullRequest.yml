name: Pull Request
on:
  pull_request:
    branches: [main]
  pull_request_review:
    types:
      - submitted
jobs:
  Requests_Build:
    name: Build and Test for Pull Request
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
    - name: Install plugin
      run: |
        pip install pytest pytest-cov
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Check code
      uses: actions/checkout@v4
      with:
        repository: DevOpsTeamB2023/Assignment_Test_CICDPR

  Requests_AddReviewer:
    name: Add Technical Lead as Reviewer
    needs: Requests_Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Add Reviewers
      uses: madrapps/add-reviewers@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        reviewers: koayyiting

  Requests_Review:
    name: Review Response
    needs: Requests_Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review'
    steps:
    - name: Check Code has been Reviewed
      run: |
        # Use GitHub API to get information about the pull request
        pr_info=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                   "https://api.github.com/repos/DevOpsTeamB2023/DevOps_Oct2023_TeamB_Assignment/pulls/${{ github.event.pull_request.number }}")
        # Extract the number of reviews and approvals
        review_count=$(echo "$pr_info" | jq '.reviews | length')
        approval_count=$(echo "$pr_info" | jq '.reviews | map(select(.state == "APPROVED")) | length')
        # Check if at least one review is submitted and it is approved
        if [ "$review_count" -ge 1 ] && [ "$approval_count" -ge 1 ]; then
          echo "Technical Lead has submitted reviewed and approved."
        else
          echo "Required review is pending or not approved. Please wait for the review before merging."
          exit 1
        fi

    - name: Approved Required Pull Request Review
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.event.before }}
        inputs: '{"label": "approved"}'
        
    - name: Manual Approval
      if: always()
      run: echo "Pull request requires manual approval."
      
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
