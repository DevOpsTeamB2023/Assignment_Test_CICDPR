# Triggered by any pull request from repository
name: Pull Request

on:
  pull_request:
  pull_request_review:
    types:
      - submitted

jobs:
  Requests_Build:
    uses: ./.github/workflows/BuildingSetUp.yml # Reusable workflow

  Requests_AddReviewer:
    name: Adding Reviewer
    needs: Requests_Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Reviewer
        id: toadd_reviewers
        # Default Reviewer = Technical Lead | Developer review Technical Lead
        run: |
          AUTHOR=${{ github.event.pull_request.user.login }}
          if [ "$AUTHOR" == "koayyiting" ]; then
            REVIEWERS="ng-zi-yi"
          else
            REVIEWERS="koayyiting"
          fi
          echo "::set-ouput name=reviewers::$REVIEWERS"

      - name: Add Reviewers
        uses: madrapps/add-reviewers@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          reviewers: ${{ steps.toadd_reviewers.outputs.reviewers }}

  Response_Review:
    name: Approve Review and Merge
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review'
    steps:
      - name: Get Review Status
        id: get_reviews
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REVIEWS=$(curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/reviews")

          APPROVED_REVIEWS=$(echo "$REVIEWS" | jq -r '.[] | select(.state == "APPROVED") | .user.login')
          echo "::set-output name=approved_reviews::$APPROVED_REVIEWS"

  Merge_Request:
    if: ${{ needs.Response_Review.outputs.approved_reviews }} >= 1
    needs: Response_Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'DevOpsTeamB2023/Assignment_Test_CICDPR'
          
      - name: Get Check Status
        uses: actions/get-status-checks@v8
        with:
          ref: ${{ github.sha }}
      - name: Check For Successful Builds
        run: |
          successful_checks=$(echo "${{ steps.get-status-checks.outputs.checks }}" | jq 'map(select(.state == "success")) | length')
          if [ "$successful_checks" == "${{ github.event.pull_request.commits }}" ]; then
            # Proceed with the merge if checks are successful
          else
            echo "Checks have not all passed. Merge cannot be performed."
          fi

      - uses: actions/checkout@v4
      - name: Auto Merge Pull Request
        uses: "pascalgn/automerge-action@v0.16.2"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          merge_labels: automerge
          required_labels: ${{ github.context.payload.pull_request.title }}
          title: ${{ github.event.pull_request.number }} + " pull request merged"
          merge_method: merge
