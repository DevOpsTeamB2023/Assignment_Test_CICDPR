# Triggered by any pull request from repository
name: Pull Request

on:
  pull_request:
  pull_request_review:
    types:
      - submitted

jobs:
  Requests_Build:
    uses: ./.github/workflows/BuildingSetUp.yml # Reusable workflow
    
  Requests_AddReviewer:
    name: Adding Reviewer
    needs: Requests_Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Reviewer
        id: toadd_reviewers
        # Defines Reviewer = (default) Technical Lead | Developer review Technical Lead
        run: |
          AUTHOR=${{ github.event.pull_request.user.login }}
          if [ "$AUTHOR" == "koayyiting" ]; then
            REVIEWERS="ng-zi-yi"
          else
            REVIEWERS="koayyiting"
          fi
          echo "::set-output name=reviewers::$REVIEWERS"

      # Add Reviewer to Pull Request
      - name: Add Reviewers
        uses: madrapps/add-reviewers@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          reviewers: ${{ steps.toadd_reviewers.outputs.reviewers }}
          re-request-when-changes-requested: true

  Response_Review:
    name: Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review'
    steps:
      # Retrieve Reviews approved
      - name: Get Review Status
        id: get_reviews
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REVIEWS=$(curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/reviews")

          APPROVED_REVIEWS=$(echo "$REVIEWS" | jq -r '.[] | select(.state == "APPROVED") | .user.login')
          echo "::set-output name=approved_reviews::$APPROVED_REVIEWS"


      - name: Get Pull Request Review Message
        id: get_review_message
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            import * as core from '@actions/core';
            import * as github from '@actions/github';

            const pull_number = context.payload.pull_request.number;
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number,
            });
            const [latestReview] = reviews.data;
            core.setOutput('review_message', latestReview.body);
  
  # Create Issue for Review Request for Changes
  Issue_Request:
    name: Review Request for Changes
    needs: Response_Review
    if: ${{ github.event.review.state == 'changes_requested' }}
    runs-on: ubuntu-latest
    steps:
      - uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: "[REQUEST CHANGES] PR#${{ github.event.pull_request.number }}"
          body: |
            [Code Source](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Comment - 
            `${{ steps.get_review_message.outputs.review_message }}`
          assignees: ${{ github.actor }}

  Merge_Request:
    if: ${{ needs.Response_Review.outputs.approved_reviews }} >= 1 && ${{ github.event.review.state != 'changes_requested' }}
    needs: Response_Review
    runs-on: ubuntu-latest
    steps:
      # Retrieve Pull Request status of checks
      - uses: actions/checkout@v4
      - name: Get Check Status
        id: get-status
        uses: danieldeichfuss/get-status@v0.0.10
        with:
          ref: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # Add automerge label to be able to run pascalgn/automerge-action@v0.16.2 successfully 
      - uses: actions/checkout@v3
      - name: Label Pull Request as automerge
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ steps.get-status.outputs.all-checks-completed == 'true' && steps.get-status.outputs.all-checks-passed == 'true' }} && ${{ startsWith(github.event.comment.body, '/add-labels') }}
        with:
          labels: automerge

      # Merge Pull Request action 
      - uses: actions/checkout@v4
      - name: Auto Merge Pull Request
        uses: "pascalgn/automerge-action@v0.16.2"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          required_labels: automerge
          merge_commit_message: "{ pull-request-title } - Merged PR#${{ github.event.pull_request.number }} "
          title: ${{ github.event.pull_request.number }} + " pull request merged"
          merge_method: merge
