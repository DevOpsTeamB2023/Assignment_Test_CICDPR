name: Pull Request
on:
  pull_request:
  pull_request_review:
    types:
      - submitted
jobs:
  Requests_Build:
    name: Build and Test for Pull Request
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Python
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    # Go Lang
    - uses: actions/setup-go@v4 
      with:
        go-version: '1.18'
    
    - name: Install plugin
      run: |
        pip install pytest pytest-cov
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Check code
      uses: actions/checkout@v4
      with:
        repository: DevOpsTeamB2023/Assignment_Test_CICDPR

  Requests_AddReviewer:
    name: Adding Reviewer
    needs: Requests_Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Reviewer
        id: toadd_reviewers
        run: |
          AUTHOR=${{ github.event.pull_request.user.login }}
          if [ "$AUTHOR" == "koayyiting" ]; then
            REVIEWERS="ng-zi-yi"
          else
            REVIEWERS="koayyiting"
          fi
          echo "::set-output name=reviewers::$REVIEWERS"

      - name: Add Reviewers
        uses: madrapps/add-reviewers@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          reviewers: ${{ steps.toadd_reviewers.outputs.reviewers }}

  Response_Review:
    name: Approved Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review'
    
    steps:          
      - name: Check Code has been Reviewed
        id: get_reviews
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REVIEWS=$(curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/reviews")

          APPROVED_REVIEWS=$(echo "$REVIEWS" | jq -r '.[] | select(.state == "APPROVED") | .user.login')
          echo "::set-output name=approved_reviews::$APPROVED_REVIEWS"

      - uses: actions/checkout@v3
      - name: Check All Successful checks, then Merge
        if: ${{ steps.get_reviews.outputs.approved_reviews }} >= 1
        run: |
          if [[$CHECKS_SUCCEEDED == true ]]; then
            echo "All checks passed, proceeding with merge."
          else
            echo "Checks failed, not merging."
            exit 1 # Terminate the job if checks fail
          fi

      - uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          required_labels: ${{ github.context.payload.pull_request.title }}
          title: ${{github.context.payload.pull_request.number}} + " pull request merged"
          merge_method: merge  # Crucial for merging to the set branch
