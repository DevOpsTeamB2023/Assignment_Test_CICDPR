name: Pull Request
on:
  pull_request:
    branches: [main]
  pull_request_review:
    types:
      - submitted
jobs:
  Requests_Build:
    name: Build and Test for Pull Request
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
    - name: Install plugin
      run: |
        pip install pytest pytest-cov
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Check code
      uses: actions/checkout@v4
      with:
        repository: DevOpsTeamB2023/Assignment_Test_CICDPR

  Requests_AddReviewer:
    name: To Be Reviewed by Technical Lead
    needs: Requests_Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
    - name: Add Reviewer
      uses: madrapps/add-reviewers@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        reviewers: koayyiting

  Required_Review:
    name: Technical Lead has submitted review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review' && github.event.action == 'submitted'
    steps:
      - name: Check review status
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (await github.issues.getPullRequestReviews({ owner: context.repo.owner, repo: context.repo.repo, pull_number: context.issue.number }))
              .data.reviews.nodes.filter(r => r.state == 'APPROVED').length < 1
              throw new Error('Pull request requires at least 1 approved review by Technical Lead to merge.')
              
      - name: Merge pull request upon Approval
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
                github.pulls.merge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number,
                  merge_method: 'squash',
                  commit_message: 'Merging approved pull request'
                })
        
